#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
Test script per verificare la logica di validazione della sessione
"""

import requests
import json
import time

# Configurazione
FRONTEND_URL = "http://localhost:8082"
BACKEND_URL = "http://localhost:5000"

def test_session_validation():
    """Test della validazione della sessione"""
    
    print("üß™ Test della validazione automatica della sessione")
    print("=" * 60)
    
    # Test 1: Verifica endpoint di validazione sessione
    print("\n1Ô∏è‚É£ Test endpoint /api/auth/validate-session")
    try:
        response = requests.get(f"{FRONTEND_URL}/api/auth/validate-session")
        print(f"   Status: {response.status_code}")
        if response.status_code == 401:
            print("   ‚úÖ Corretto: Endpoint richiede autenticazione")
        else:
            print(f"   ‚ö†Ô∏è  Inaspettato: {response.status_code}")
    except Exception as e:
        print(f"   ‚ùå Errore: {e}")
    
    # Test 2: Verifica endpoint backend
    print("\n2Ô∏è‚É£ Test endpoint backend /api/auth/validate-session")
    try:
        response = requests.get(f"{BACKEND_URL}/api/auth/validate-session")
        print(f"   Status: {response.status_code}")
        if response.status_code == 401:
            print("   ‚úÖ Corretto: Endpoint richiede autenticazione")
        else:
            print(f"   ‚ö†Ô∏è  Inaspettato: {response.status_code}")
    except Exception as e:
        print(f"   ‚ùå Errore: {e}")
    
    # Test 3: Verifica template base
    print("\n3Ô∏è‚É£ Test template base con JavaScript di validazione")
    try:
        response = requests.get(f"{FRONTEND_URL}/")
        print(f"   Status: {response.status_code}")
        if response.status_code == 200:
            content = response.text
            if "checkSessionValidity" in content:
                print("   ‚úÖ Corretto: JavaScript di validazione presente")
            else:
                print("   ‚ùå Errore: JavaScript di validazione mancante")
            
            if "performLogout" in content:
                print("   ‚úÖ Corretto: Funzione logout automatico presente")
            else:
                print("   ‚ùå Errore: Funzione logout automatico mancante")
        else:
            print(f"   ‚ö†Ô∏è  Inaspettato: {response.status_code}")
    except Exception as e:
        print(f"   ‚ùå Errore: {e}")
    
    print("\n" + "=" * 60)
    print("üìã Riepilogo implementazione:")
    print("‚úÖ Endpoint /api/auth/validate-session aggiunto al backend")
    print("‚úÖ Proxy endpoint aggiunto al frontend")
    print("‚úÖ JavaScript di validazione automatica aggiunto al template base")
    print("‚úÖ Verifica sessione ogni 5 minuti")
    print("‚úÖ Verifica sessione quando l'utente torna alla pagina")
    print("‚úÖ Logout automatico se la sessione non √® pi√π valida")
    print("‚úÖ Gestione errori 401 nelle richieste API")
    
    print("\nüéØ Funzionalit√† implementate:")
    print("‚Ä¢ Verifica automatica della sessione ad ogni caricamento pagina")
    print("‚Ä¢ Controllo periodico ogni 5 minuti")
    print("‚Ä¢ Controllo quando l'utente torna alla pagina (visibilitychange)")
    print("‚Ä¢ Logout automatico SOLO se la sessione non √® pi√π valida")
    print("‚Ä¢ Gestione graceful degli errori di rete")
    print("‚Ä¢ Pulizia automatica del localStorage")
    print("‚Ä¢ Redirect automatico alla pagina di login")

if __name__ == "__main__":
    test_session_validation()